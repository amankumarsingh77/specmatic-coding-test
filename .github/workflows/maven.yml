# This workflow will build and test the Go service with Specmatic contract tests using testcontainers

name: CI Pipeline

on:
  push:
    branches: [ main, feat/testcontainers ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # docker is not supported on the MacOS arm64 images. Source: https://github.com/marketplace/actions/setup-docker-on-macos
        go: [1.23]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
        check-latest: true

    - name: Set up Docker (Linux/Windows)
      if: runner.os != 'macOS'
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker (macOS)
      if: runner.os == 'macOS'
      run: |
        # Install Docker Desktop for macOS
        brew install --cask docker
        # Start Docker Desktop
        sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended &
        # Wait for Docker to be ready
        echo "Waiting for Docker to start..."
        while ! docker info >/dev/null 2>&1; do
          echo "Docker not ready yet, waiting..."
          sleep 5
        done
        echo "Docker is ready!"

    - name: Build Go Service Docker Image
      run: |
        docker build -t specmatic-go-service:latest .

    - name: Verify Go Service Build
      working-directory: go-service
      run: |
        go mod download
        go vet ./...
        go build -o service

    - name: Run Contract Tests with Testcontainers
      working-directory: go-service
      env:
        SPECMATIC_OAUTH2_TOKEN: ""
        CUSTOM_RESPONSE: "false"
        SPECMATIC_GENERATIVE_TESTS: "true"
        ONLY_POSITIVE: "false"
      run: |
        go test -v -timeout 10m

